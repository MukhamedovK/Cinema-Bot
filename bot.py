import logging

from aiogram import Dispatcher, Bot, executor
from aiogram.types import *
from btn import start_btn, search_btn, popularny_reply_btn, popularny_inline_btn, film_serial_btn, zakladki_btn, information_btn


logging.basicConfig(level=logging.INFO)

BOT_TOKEN = "6251779786:AAG3lZJXf7u2-r7rBOW29ZhSiCbEL7ZF3zw"

bot = Bot(token=BOT_TOKEN, parse_mode='html')
dp = Dispatcher(bot=bot)


@dp.message_handler(commands=['start'])
async def start_command(message: Message):
    btn = await start_btn()
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –Ω–∞—à–µ–º –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–µ!\n\n"
                        "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ñ–∏–ª—å–º—ã, –Ω–æ–≤–∏–Ω–∫–∏, —Å–µ—Ä–∏–∞–ª—ã –∏—â–∏—Ç–µ –∑–¥–µ—Å—å üòâ\n\n"
                        "üåÄ –ó–µ—Ä–∫–∞–ª–æ –±–æ—Ç–∞: @ActualMirrorBot\n\n"
                        "ü§ü –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!\n\n", reply_markup=btn)
    
@dp.message_handler()
async def text_bot(message: Message):
    text = message.text
    if text == "üîç –ü–æ–∏—Å–∫":
        btn = await search_btn()
        await message.answer("üîç –ö–∞–∫–æ–π —Ñ–∏–ª—å–º –∏–ª–∏ —Å–µ—Ä–∏–∞–ª –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?\n"
                            "–ò—â–µ–º: <i>–ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é</i>", reply_markup=btn)

    elif text == "üî• –ü–æ–ø—É–ª—è—Ä–Ω–æ–µ":
        btn = await popularny_reply_btn()
        btn2 = await popularny_inline_btn()
        await message.answer("üî• –ü–æ–ø—É–ª—è—Ä–Ω–æ–µ", reply_markup=btn)
        await message.answer("1) –¢–∞–π–ª–µ—Ä –†–µ–π–∫: –û–ø–µ—Ä–∞—Ü–∏—è –ø–æ —Å–ø–∞—Å–µ–Ω–∏—é 2 (2023)\n"
                            "<code>–ö–ü: 0.00 | IMDb: 8.10 | –±–æ–µ–≤–∏–∫ | 02:02</code>\n"
                            "2) –§–ª—ç—à (2023)\n"
                            "<code>–ö–ü: 6.50 | IMDb: 7.80 | –±–æ–µ–≤–∏–∫ | 02:24</code>\n"
                            "3) –í–æ–ª–∫ —Å –£–æ–ª–ª-—Å—Ç—Ä–∏—Ç (2013)\n"
                            "<code>–ö–ü: 7.90 | IMDb: 8.20 | –±–∏–æ–≥—Ä–∞—Ñ–∏—è | 03:00</code>\n"
                            "4) –ß–µ–ª–æ–≤–µ–∫-–ø–∞—É–∫: –ß–µ—Ä–µ–∑ –≤—Å–µ–ª–µ–Ω–Ω—ã–µ 2 (2022)\n"
                            "<code>–ö–ü: 0.00 | IMDb: 0.00 | –±–æ–µ–≤–∏–∫ | 00:00</code>\n"
                            "5) –î–∂–æ—Ä–¥–∂ –§–æ—Ä–º–∞–Ω: –ù–µ—Å–æ–∫—Ä—É—à–∏–º—ã–π (2023)"
                            "<code>–ö–ü: 0.00 | IMDb: 6.60 | –±–∏–æ–≥—Ä–∞—Ñ–∏—è | 02:09</code>\n", reply_markup=btn2)

    elif text == "üóÑ –§–∏–ª—å–º—ã":
        btn = await film_serial_btn()
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=btn)

    elif text == "üóÇ –°–µ—Ä–∏–∞–ª—ã":
        btn = await film_serial_btn()
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=btn)

    elif text == "‚≠êÔ∏è –ó–∞–∫–ª–∞–¥–∫–∏":
        btn = await zakladki_btn()
        await message.answer("‚≠êÔ∏è –ó–∞–∫–ª–∞–¥–∫–∏", reply_markup=btn)

    elif text == "üë®‚Äçüíª –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        btn = await information_btn()
        await message.answer("üíª –ó–µ—Ä–∫–∞–ª–æ –±–æ—Ç–∞: @ActualMirrorBot\n\n"
                            "üíé –ü—Ä–æ–¥–ª–∏—Ç—å/–∫—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É: @EasyPayRo_bot\n\n"
                            "–¢–≤–æ–π PREMIUM: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚òπÔ∏è\n\n", reply_markup=btn)

    elif text == "‚§¥Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è":
        btn = await start_btn()
        await message.answer("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=btn)



if __name__ == '__main__':
    executor.start_polling(dp)